name: Build and deploy Lease Pixie Next.js frontend to Azure Web App

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        name: Checkout code
      - run: echo "✅ Successfully checked out the code"

      - name: Set up Node.js version
        uses: actions/setup-node@v3
        with:
          node-version: "20.x"
      - run: |
          echo "✅ Node.js version $(node --version) set up successfully"
          echo "NPM version: $(npm --version)"

      - name: npm install, build, and test
        env:
          NEXT_PUBLIC_RADAR_API_KEY: ${{ secrets.NEXT_PUBLIC_RADAR_API_KEY }}
          NEXT_PUBLIC_API_URL: ${{ secrets.NEXT_PUBLIC_API_URL }}
        run: |
          echo "📦 Installing dependencies..."
          npm install
          echo "✅ Dependencies installed successfully"
          echo "🏗️ Building Next.js app..."
          npm run build --if-present
          echo "✅ Next.js app built successfully"
          # echo "🧪 Running tests..."
          # npm run test --if-present
          # echo "✅ Tests completed successfully"

      - name: Verify .next/static folder
        run: |
          echo "📂 Verifying .next/static folder..."
          if [ -d ".next/static" ]; then
            echo "✅ .next/static folder exists"
            ls -R .next/static
          else
            echo "❌ .next/static folder not found"
            exit 1
          fi

      - name: Zip artifact for deployment
        run: |
          echo "📦 Zipping necessary files for deployment..."
          zip -r release.zip .next/standalone .next/static public
          if [ -f "release.zip" ]; then
            echo "✅ Successfully created release.zip"
          else
            echo "❌ Failed to create release.zip"
            exit 1
          fi

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: node-app
          path: release.zip
      - run: echo "✅ Successfully uploaded artifact for deployment"

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: "production"
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: node-app
      - run: |
          echo "📥 Downloading artifact..."
          if [ -f "release.zip" ]; then
            echo "✅ Successfully downloaded artifact"
          else
            echo "❌ Failed to download artifact"
            exit 1
          fi

      - name: Unzip artifact for deployment
        run: |
          echo "📦 Unzipping artifact..."
          mkdir -p app
          unzip release.zip -d app
          echo "📂 Verifying folder structure..."
          ls -R app
          echo "📂 Contents of .next/static:"
          ls -R app/.next/static
          # Copy public and .next/static into standalone
          echo "📂 Adjusting folder structure..."
          cp -r app/public app/.next/standalone/
          mkdir -p app/.next/standalone/.next
          cp -r app/.next/static app/.next/standalone/.next/
          rm -rf app/public app/.next/static
          echo "📂 New folder structure:"
          ls -R app
          echo "✅ Successfully unzipped and adjusted artifact"

      - name: Log folder structure before deployment
        run: |
          echo "📂 Folder structure before deployment:"
          ls -R app

      - name: "Deploy to Azure Web App"
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: "leasepixie"
          slot-name: "production"
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE }}
          package: app
      - run: |
          echo "🚀 Deployment to Azure Web App completed."
          if [ "${{ steps.deploy-to-webapp.outcome }}" == "success" ]; then
            echo "✅ Successfully deployed to Azure Web App"
          else
            echo "❌ Failed to deploy to Azure Web App"
            exit 1
          fi

      - name: Artifact cleanup
        run: |
          echo "🗑️ Cleaning up artifact..."
          rm -rf app release.zip
          if [ -d "app" ] || [ -f "release.zip" ]; then
            echo "❌ Failed to clean up artifacts"
            exit 1
          else
            echo "✅ Successfully cleaned up artifacts"
          fi
